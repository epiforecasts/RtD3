names(subregional_ref) <- subregional_areas
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
subregional_ref = subregional_ref
)
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
subregional_ref = subregional_ref
)
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(RtD3)
geoData <- rnaturalearth::ne_countries(returnclass = 'sf')
geoData <- geoData %>%
mutate(sovereignt = ifelse(sovereignt == 'United States of America', 'United States', sovereignt))
read_in_epinow2 <- function(input_list, path) {
if (missing(input_list) & missing(path)) {
stop("Either a list or a file path/url must be supplied")
}
if (!missing(input_list) & !missing(path)) {
message("Both a list and a filepath has been supplied. Defaulting to the list.")
}
if (!missing(input_list)) {
out <- list('summary' = input_list$summarised_results$table,
'rtData' = input_list$summarised_measures$rt,
'casesInfectionData' = input_list$summarised_measures$cases_by_infection,
'casesReportData' =  input_list$summarised_measures$cases_by_report,
'obsCasesData' =  input_list$reported_cases)
}
if (!missing(path)) {
path <- paste0(path, "/")
out <- list('summary' = data.table::fread(paste0(path, 'summary_table.csv')),
'rtData' = data.table::fread(paste0(path, 'rt.csv')),
'casesInfectionData' = data.table::fread(paste0(path, 'cases_by_infection.csv')),
'casesReportData' = data.table::fread(paste0(path, 'cases_by_report.csv')),
'obsCasesData' = data.table::fread(paste0(path, 'reported_cases.csv')))
}
return(out)
}
# Define the base URL/file path for the estimates
base_url <- 'https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/'
# Read in each summary folder
rtData <- list("Cases" = read_in_epinow2(path = paste0(base_url, "cases/summary")),
"Deaths" = read_in_epinow2(path = paste0(base_url, "deaths/summary")))
# Extract summary data from cases
summaryData <- rtData$Cases$summary
## Drop remaining summary data
rtData <- lapply(rtData, function(.){.[-1]})
subnational_base_url <- "https://epiforecasts.io/covid/posts/national/"
subregional_areas <- list('Afghanistan', 'Brazil', 'Colombia', 'India', 'Italy', 'Germany', 'Russia',
'United Kingdom', 'United States')
subregional_ref <-  paste0(subnational_base_url,tolower(subregional_ref))
names(subregional_ref) <- subregional_areas
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
subregional_ref = subregional_ref
)
subnational_base_url <- "https://epiforecasts.io/covid/posts/national/"
subregional_areas <- list('Afghanistan', 'Brazil', 'Colombia', 'India', 'Italy', 'Germany', 'Russia',
'United Kingdom', 'United States')
subregional_ref <-  paste0(subnational_base_url,tolower(subregional_ref), "/")
names(subregional_ref) <- subregional_areas
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
subregional_ref = subregional_ref
)
subregional_ref
subnational_base_url <- "https://epiforecasts.io/covid/posts/national/"
subregional_areas <- list('Afghanistan', 'Brazil', 'Colombia', 'India', 'Italy', 'Germany', 'Russia',
'United Kingdom', 'United States')
subregional_ref <-  list(paste0(subnational_base_url,tolower(subregional_ref), "/"))
names(subregional_ref) <- subregional_areas
subnational_base_url <- "https://epiforecasts.io/covid/posts/national/"
subregional_areas <- list('Afghanistan', 'Brazil', 'Colombia', 'India', 'Italy', 'Germany', 'Russia',
'United Kingdom', 'United States')
subregional_ref <-  as.list(paste0(subnational_base_url,tolower(subregional_ref), "/"))
names(subregional_ref) <- subregional_areas
subregional_ref
subnational_base_url <- "https://epiforecasts.io/covid/posts/national/"
subregional_areas <- list('Afghanistan', 'Brazil', 'Colombia', 'India', 'Italy', 'Germany', 'Russia',
'United Kingdom', 'United States')
subregional_ref <-  paste0(subnational_base_url,tolower(subregional_ref), "/")
names(subregional_ref) <- subregional_areas
subregional_ref
subnational_base_url <- "https://epiforecasts.io/covid/posts/national/"
subregional_areas <- list('Afghanistan', 'Brazil', 'Colombia', 'India', 'Italy', 'Germany', 'Russia',
'United Kingdom', 'United States')
subregional_ref <-  paste0(subnational_base_url,tolower(subregional_ref), "/")
names(subregional_ref) <- subregional_areas
subnational_base_url <- "https://epiforecasts.io/covid/posts/national/"
subregional_areas <- list('Afghanistan', 'Brazil', 'Colombia', 'India', 'Italy', 'Germany', 'Russia',
'United Kingdom', 'United States')
subregional_ref <-  paste0(subnational_base_url,tolower(subregional_areas), "/")
names(subregional_ref) <- subregional_areas
subregional_ref
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
subregional_ref = subregional_ref
)
get_subnational_urls <- function(path, areas) {
subregional_ref <-  paste0(subnational_base_url,tolower(areas), "/")
names(subregional_ref) <- areas
return(subregional_ref)
}
subnational_ref <- get_subnational_urls(path = "https://epiforecasts.io/covid/posts/national/",
areas = c('Afghanistan', 'Brazil', 'Colombia', 'India',
'Italy', 'Germany', 'Russia', 'United Kingdom',
'United States'))
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
subregional_ref = subregional_ref
)
library(RtD3)
library(RtD3)
# Define the base URL/file path for the estimates
base_url <- 'https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/'
# Read in each summary folder
rtData <- readInEpiNow2(path = paste0(base_url, "cases/summary"))
rtData
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(RtD3)
geoData <- rnaturalearth::ne_countries(returnclass = 'sf')
geoData <- geoData %>%
mutate(sovereignt = ifelse(sovereignt == 'United States of America', 'United States', sovereignt))
# Define the base URL/file path for the estimates
base_url <- 'https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/'
# Read in each summary folder
rtData <- list("Cases" = RtD3::readInEpiNow2(path = paste0(base_url, "cases/summary")),
"Deaths" = RtD3::readInEpiNow2(path = paste0(base_url, "deaths/summary")))
# Extract summary data from cases
summaryData <- rtData$Cases$summary
## Drop remaining summary data
rtData <- lapply(rtData, function(.){.[-1]})
subnational_ref <- RtD3::getSubnationalUrls(path = "https://epiforecasts.io/covid/posts/national/",
areas = c('Afghanistan', 'Brazil', 'Colombia', 'India',
'Italy', 'Germany', 'Russia', 'United Kingdom',
'United States'))
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
subregional_ref = subregional_ref
)
pkgdown::build_site()
library(RtD3)
pkgdown::build_site()
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(RtD3)
geoData <- rnaturalearth::ne_countries(returnclass = 'sf')
geoData <- geoData %>%
mutate(sovereignt = ifelse(sovereignt == 'United States of America', 'United States', sovereignt))
# Define the base URL/file path for the estimates
base_url <- 'https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/'
# Read in each summary folder
rtData <- list("Cases" = RtD3::readInEpiNow2(path = paste0(base_url, "cases/summary")),
"Deaths" = RtD3::readInEpiNow2(path = paste0(base_url, "deaths/summary")))
# Extract summary data from cases
summaryData <- rtData$Cases$summary
## Drop remaining summary data
rtData <- lapply(rtData, function(.){.[-1]})
subnational_ref <- RtD3::getSubnationalUrls(path = "https://epiforecasts.io/covid/posts/national/",
areas = c('Afghanistan', 'Brazil', 'Colombia', 'India',
'Italy', 'Germany', 'Russia', 'United Kingdom',
'United States'))
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
subregional_ref = subregional_ref
)
RtD3::getSubnationalUrls(path = "https://epiforecasts.io/covid/posts/national/",
areas = c('Afghanistan', 'Brazil', 'Colombia', 'India',
'Italy', 'Germany', 'Russia', 'United Kingdom',
'United States'))
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
subregional_ref = subnational_ref
)
library(RtD3)
getSubregionalUrls(path = "https://epiforecasts.io/covid/posts/national/",
.                  areas = c('Afghanistan', 'Brazil', 'Colombia', 'India'))
getSubregionalUrls(path = "https://epiforecasts.io/covid/posts/national/",
areas = c('Afghanistan', 'Brazil', 'Colombia', 'India'))
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(RtD3)
geoData <- rnaturalearth::ne_countries(returnclass = 'sf')
geoData <- geoData %>%
mutate(sovereignt = ifelse(sovereignt == 'United States of America', 'United States', sovereignt))
# Define the base URL/file path for the estimates
base_url <- 'https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/'
# Read in each summary folder
rtData <- list("Cases" = RtD3::readInEpiNow2(path = paste0(base_url, "cases/summary")),
"Deaths" = RtD3::readInEpiNow2(path = paste0(base_url, "deaths/summary")))
# Extract summary data from cases
summaryData <- rtData$Cases$summary
## Drop remaining summary data
rtData <- lapply(rtData, function(.){.[-1]})
subnational_ref <- RtD3::getSubregionalUrls(path = "https://epiforecasts.io/covid/posts/national/",
areas = c('Afghanistan', 'Brazil', 'Colombia', 'India',
'Italy', 'Germany', 'Russia', 'United Kingdom',
'United States'))
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
subregional_ref = subnational_ref
)
pkgdown::build_site()
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(RtD3)
geoData <- rnaturalearth::ne_states('India', returnclass = 'sf') %>%
rename(sovereignt = name_en)
# Read in each summary folder
rtData <- list("Cases" =
RtD3::readInEpiNow2(path = "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/subnational/india/cases/summary"))
# Extract summary data from cases
summaryData <- rtData$Cases$summary
## Drop remaining summary data
rtData <- lapply(rtData, function(.){.[-1]})
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
activeArea = 'Sikkim'
)
?toupper
region_var <- "region"
capwords <- function(s, strict = FALSE) {
cap <- function(s) paste(toupper(substring(s, 1, 1)),
{s <- substring(s, 2); if(strict) tolower(s) else s},
sep = "", collapse = " " )
sapply(strsplit(s, split = " "), cap, USE.NAMES = !is.null(names(s)))
}
capwords(region_var)
library(RtD3)
base_url <- 'https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/'
# Read in each summary folder
rtData <- readInEpiNow2(path = paste0(base_url, "cases/summary"),
region_var = "country")
rtData
paste0(base_url, "cases/summary")
source('~/RtD3/R/readInEpiNow2.R', echo=TRUE)
rtData <- readInEpiNow2(path = "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary",
region_var = "country")
?data.table::setnames
debugonce()
debugonce(readInEpiNow2)
rtData <- readInEpiNow2(path = "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary",
region_var = "country")
path <- paste0(path, "/")
out <- list('summary' = data.table::fread(paste0(path, 'summary_table.csv')),
'rtData' = data.table::fread(paste0(path, 'rt.csv')),
'casesInfectionData' = data.table::fread(paste0(path, 'cases_by_infection.csv')),
'casesReportData' = data.table::fread(paste0(path, 'cases_by_report.csv')),
'obsCasesData' = data.table::fread(paste0(path, 'reported_cases.csv')))
out
capwords <- function(s, strict = FALSE) {
cap <- function(s) paste(toupper(substring(s, 1, 1)),
{s <- substring(s, 2); if(strict) tolower(s) else s},
sep = "", collapse = " " )
sapply(strsplit(s, split = " "), cap, USE.NAMES = !is.null(names(s)))
}
out$summary <- data.table::setnames(out$summary, capwords(region_var), "Country")
rename_col <- function(df) {
df <- data.table::setnames(df, region_var, "country")
}
out$rtData <- rename_col(out$rtData)
out$casesInfectionData <- rename_col(out$casesInfectionData)
out$casesReportData <- rename_col(out$casesReportData)
library(RtD3)
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(RtD3)
geoData <- rnaturalearth::ne_countries(returnclass = 'sf')
geoData <- geoData %>%
mutate(sovereignt = ifelse(sovereignt == 'United States of America', 'United States', sovereignt))
# Define the base URL/file path for the estimates
base_url <- 'https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/'
# Read in each summary folder
rtData <- list("Cases" = RtD3::readInEpiNow2(path = paste0(base_url, "cases/summary"),
region_var = "country"),
"Deaths" = RtD3::readInEpiNow2(path = paste0(base_url, "deaths/summary"),
region_var = "country"))
# Extract summary data from cases
summaryData <- rtData$Cases$summary
## Drop remaining summary data
rtData <- lapply(rtData, function(.){.[-1]})
subnational_ref <- RtD3::getSubregionalUrls(path = "https://epiforecasts.io/covid/posts/national/",
areas = c('Afghanistan', 'Brazil', 'Colombia', 'India',
'Italy', 'Germany', 'Russia', 'United Kingdom',
'United States'))
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
subregional_ref = subnational_ref
)
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(RtD3)
geoData <- rnaturalearth::ne_states('India', returnclass = 'sf') %>%
rename(sovereignt = name_en)
# Read in each summary folder
rtData <- list("Cases" =
RtD3::readInEpiNow2(path = "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/subnational/india/cases/summary"),
region_var = "region")
# Extract summary data from cases
summaryData <- rtData$Cases$summary
## Drop remaining summary data
rtData <- lapply(rtData, function(.){.[-1]})
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
activeArea = 'Sikkim'
)
rtData
# Define the base URL/file path for the estimates
base_url <- 'https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/'
# Read in each summary folder
rtData <- list("Cases" = RtD3::readInEpiNow2(path = paste0(base_url, "cases/summary"),
region_var = "country"),
"Deaths" = RtD3::readInEpiNow2(path = paste0(base_url, "deaths/summary"),
region_var = "country"))
# Extract summary data from cases
summaryData <- rtData$Cases$summary
## Drop remaining summary data
rtData <- lapply(rtData, function(.){.[-1]})
rtData
geoData <- rnaturalearth::ne_states('India', returnclass = 'sf') %>%
rename(sovereignt = name_en)
# Read in each summary folder
rtData <- list("Cases" =
RtD3::readInEpiNow2(path = "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/subnational/india/cases/summary",
region_var = "region"))
# Extract summary data from cases
summaryData <- rtData$Cases$summary
## Drop remaining summary data
rtData <- lapply(rtData, function(.){.[-1]})
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
activeArea = 'Sikkim'
)
pkgdown::build_site()
library(RtD3)
library(RtD3)
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(RtD3)
base_url <- 'https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/'
geoData <- rnaturalearth::ne_countries(returnclass = 'sf')
rtData <- list("Cases" = RtD3::readInEpiNow2(
path = "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary",
region_var = "country"
))
# Extract summary data from cases
summaryData <- rtData$Cases$summary
## Drop remaining summary data
rtData <- lapply(rtData, function(.){.[-1]})
RtD3::summaryWidget(
geoData = geoData,
summaryData = summaryData,
rtData = rtData,
)
expected_columns <- c('country','date','type','median','lower_90','upper_90','lower_50','upper_50')
out <- readInEpiNow2(
path = "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary",
region_var = "country")
out
expected_columns <- c('country','date','type','median','lower_90','upper_90','lower_50','upper_50')
check_rtData_columns(out$rtData, expected_columns)
library(RtD3)
check_rtData_columns(out$rtData, expected_columns)
library(RtD3)
devtools::test()
devtools::test()
out <- readInEpiNow2(
path = "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary",
region_var = "country")
summaryData <- rtData$Cases$summary
geoData <- rnaturalearth::ne_countries(returnclass = 'sf')
out$Cases <- out$Cases[-1]
testthat::expect_true(summaryWidget(geoData = geoData,
summaryData = summaryData,
rtData = out,
dryRun = TRUE))
out
out$Cases[-1]
out$Cases[[-1]]
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(RtD3)
# Read in each summary folder
rtData <- list("Cases" = RtD3::readInEpiNow2(path = paste0(base_url, "cases/summary"),
region_var = "country"),
"Deaths" = RtD3::readInEpiNow2(path = paste0(base_url, "deaths/summary"),
region_var = "country"))
# Extract summary data from cases
summaryData <- rtData$Cases$summary
## Drop remaining summary data
rtData <- lapply(rtData, function(.){.[-1]})
rtData
out
out <- list("Cases" = readInEpiNow2(
path = "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary",
region_var = "country"))
summaryData <- rtData$Cases$summary
geoData <- rnaturalearth::ne_countries(returnclass = 'sf')
out$Cases <- out$Cases[[-1]]
testthat::expect_true(summaryWidget(geoData = geoData,
summaryData = summaryData,
rtData = out,
dryRun = TRUE))
out <- list("Cases" = readInEpiNow2(
path = "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary",
region_var = "country"))
summaryData <- rtData$Cases$summary
geoData <- rnaturalearth::ne_countries(returnclass = 'sf')
out$Cases <- out$Cases[-1]
out
summaryWidget(geoData = geoData,
summaryData = summaryData,
rtData = out,
dryRun = TRUE)
devtools::test()
devtools::test()
out <- getSubregionalUrls(path = "hi/",
areas = c('there', 'their'))
out
out <- getSubregionalUrls(path = "hi/",
areas = c('there', 'their'))
expect_equal(names(out), c("there", "their"))
expect_equal(out, c("hi/there/","hi/their/"))
source('~/RtD3/tests/testthat/test-getSubregionalUrls.R', echo=TRUE)
out <- getSubregionalUrls(path = "hi/",
areas = c('there', 'their'))
expect_equal(names(out), c("there", "their"))
expect_equal(unname(out), c("hi/there/","hi/their/"))
unname(out)
out <- list("Cases" = readInEpiNow2(
path = "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary",
region_var = "country"))
summaryData <- rtData$Cases$summary
out$Cases <- out$Cases[-1]
testthat::expect_true(suppressWarnings(summaryWidget(summaryData = summaryData,
rtData = out,
dryRun = TRUE)))
out <- list("Cases" = readInEpiNow2(
path = "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/master/national/cases/summary",
region_var = "country"))
summaryData <- out$Cases$summary
out$Cases <- out$Cases[-1]
testthat::expect_true(suppressWarnings(summaryWidget(summaryData = summaryData,
rtData = out,
dryRun = TRUE)))
library(RtD3)
# Read in each summary folder
base_path <- "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/"
rtData <- readInEpiNow2(
path = paste0(base-path, "master/national/cases/summary",
region_var = "country")
rtData
# Read in each summary folder
base_path <- "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/"
rtData <- readInEpiNow2(
path = paste0(base-path, "master/national/cases/summary"),
region_var = "country")
rtData
source('~/RtD3/R/readInEpiNow2.R', echo=TRUE)
# Read in each summary folder
base_path <- "https://raw.githubusercontent.com/epiforecasts/covid-rt-estimates/"
rtData <- readInEpiNow2(
path = paste0(base_path, "master/national/cases/summary"),
region_var = "country")
rtData
library(RtD3)
pkgdown::build_site()
usethis::use_news_md()
pkgdown::build_news()
pkgdown::build_site()
library(RtD3)
pkgdown::build_site()
pkgdown::build_site()
?gsub
library(RtD3)
getSubregionalUrls(path = "https://epiforecasts.io/covid/posts/national/",
areas = c('Afghanistan', 'Brazil', 'Colombia', 'India'))
getSubregionalUrls(path = "https://epiforecasts.io/covid/posts/national/",
areas = c('Afghanistan', 'Brazil', 'Colombia', 'United States"))
getSubregionalUrls(path = "https://epiforecasts.io/covid/posts/national/",
areas = c('Afghanistan', 'Brazil', 'Colombia', 'United States'))
library(RtD3)
